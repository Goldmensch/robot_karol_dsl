fun umdrehen {
    turnLeft()
    turnLeft()
}

fun schrittRueckwaerts {
    umdrehen()
    step()
    umdrehen()
}

cond istMarkeVorne {
    step()
    return isMark()
    schrittRueckwaerts()
}

cond fast istGehenErlaubt {
    return !isWall() & !isBrick() & !istMarkeVorne()
}

cond fast istZiel {
    return false
    4 times {
        if isBrick(1) {
            return true
        }
        turnLeft()
    }
}

fun zweigGehen {
    setMark()
    4 times {
        if istGehenErlaubt() {
            step()
            fast {
                zweigGehen()
                if istZiel() {
                    wait(2500)
                    beep()
                    while !isBrick(1) {
                        turnLeft()
                    }
                    step()
                    stop()
                } else {
                    fast {
                        schrittRueckwaerts()
                    }
                }
            }
        }
        fast {
            turnLeft()
        }
    }
}

main fast {
    zweigGehen()
    2 times {
        beep()
        wait(2000)
    }
}
